---
- name: "install necessary packages"
  apt: pkg={{ item }} state=latest
  become: yes
  with_items: "{{ openvpn.packages }}"

- name: "gathering file info"
  stat:
    path: "{{ openvpn.server.example_file }}"
  register: example_conf

- name: "check for sample config"
  fail:
    msg: "could not find sample server config"
  when: example_conf.stat.exists == false

- name: "unpack sample conf"
  shell: gunzip -c "{{ openvpn.server.example_file }}" > "{{ openvpn.server.config_file }}"
  args:
    creates: "{{ openvpn.server.config_file }}"
  become: yes

- name: "updating server.conf"
  replace:
    dest: "{{ openvpn.server.config_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  with_items:
    - { regexp: '^dh\sdh1024\.pem$', line: 'dh dh2048.pem' }
    - { regexp: '^;push\s"redirect-gateway\sdef1\sbypass-dhcp"$', line: 'push "redirect-gateway def1 bypass-dhcp"' }
    - { regexp: '^;push\s"dhcp-option\sDNS\s208\.67\.222\.222"$', line: 'push "dhcp-option DNS {{ openvpn.server.dns.main_dns }}"' }
    - { regexp: '^;push\s"dhcp-option\sDNS\s208\.67\.220\.220"$', line: 'push "dhcp-option DNS {{ openvpn.server.dns.secondary_dns }}"' }
    - { regexp: '^;user\snobody$', line: 'user nobody' }
    - { regexp: '^;group\snogroup$', line: 'group nogroup' }
  become: yes