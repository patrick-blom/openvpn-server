---
- name: "install necessary packages"
  apt: pkg={{ item }} state=latest
  become: yes
  with_items: "{{ openvpn.packages }}"

- name: "gathering file info"
  stat:
    path: "{{ openvpn.server.examples_dir }}/server.conf.gz"
  register: example_conf

- name: "check for sample config"
  fail:
    msg: "could not find sample server config"
  when: example_conf.stat.exists == false

- name: "unpack sample conf"
  shell: gunzip -c "{{ openvpn.server.examples_dir }}/server.conf.gz" > "{{ openvpn.server.config_dir }}/server.conf"
  args:
    creates: "{{ openvpn.server.config_dir }}/server.conf"
  become: yes

- name: "updating server.conf"
  replace:
    dest: "{{ openvpn.server.config_dir }}/server.conf"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  with_items:
    - { regexp: '^dh\sdh1024\.pem$', line: 'dh dh2048.pem' }
    - { regexp: '^;push\s"redirect-gateway\sdef1\sbypass-dhcp"$', line: 'push "redirect-gateway def1 bypass-dhcp"' }
    - { regexp: '^;push\s"dhcp-option\sDNS\s208\.67\.222\.222"$', line: 'push "dhcp-option DNS {{ openvpn.server.dns.main_dns }}"' }
    - { regexp: '^;push\s"dhcp-option\sDNS\s208\.67\.220\.220"$', line: 'push "dhcp-option DNS {{ openvpn.server.dns.secondary_dns }}"' }
    - { regexp: '^;user\snobody$', line: 'user nobody' }
    - { regexp: '^;group\snogroup$', line: 'group nogroup' }
  become: yes

- name: "coping neccessary server files"
  shell: cp {{ easy_rsa_key_dir }}/server.crt {{ easy_rsa_key_dir }}/server.key {{ easy_rsa_key_dir }}/ca.crt {{ easy_rsa_key_dir }}/dh2048.pem {{ openvpn.server.config_dir }}/
  args:
      creates: "{{ openvpn.server.config_dir }}/server.crt"
  become: yes

- name: "creating client directories"
  file:
    path: {{ openvpn.server.clients_dir }}/{{ item }}
    state: directory
  with_items:
      - "{{ easy_rsa_clients }}"
  become: yes

- name: "coping neccessary client files"
  shell: cp {{ easy_rsa_key_dir }}/ca.crt {{ easy_rsa_key_dir }}/{{ item }}.crt {{ easy_rsa_key_dir }}/{{ item }}.key {{ easy_rsa_key_dir }}/{{ item }}.csr {{ openvpn.server.clients_dir }}/{{ item }}/
  args:
      creates: "{{ openvpn.server.clients_dir }}/{{ item }}/ca.crt"
  with_items:
      - "{{ easy_rsa_clients }}"
  become: yes

- name: "updating cleint.conf"
  replace:
    dest: "{{ openvpn.server.examples_dir }}/client.conf"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  with_items:
    - { regexp: '^remote\smy\-server\-1\s1194$', line: 'remote {{ openvpn_hostip }} 1194' }
    - { regexp: '^;user\snobody$', line: 'user nobody' }
    - { regexp: '^;group\snogroup$', line: 'group nogroup' }
    - { regexp: '^ca\sca\.crt$', line: '#ca ca.crt' }
    - { regexp: '^cert\sclient\.crt$', line: '#cert client.crt' }
    - { regexp: '^key\sclient\.key$', line: '#key client.key' }
  become: yes

- name: "copy sample config file to clients"
  shell: cp {{ openvpn.server.examples_dir }}/client.conf {{ openvpn.server.clients_dir }}/{{ item }}/{{ item }}.ovpn
  args:
      creates: "{{ openvpn.server.clients_dir }}/{{ item }}/{{ item }}.ovpn"
  with_items:
      - "{{ easy_rsa_clients }}"
  become: yes

- name: "building the conf files"
  shell: echo "<ca>\n`cat {{ openvpn.server.clients_dir }}/{{ item }}/ca.crt`\n</ca>\n<cert>\n`cat {{ openvpn.server.clients_dir }}/{{ item }}/{{ item }}.crt`\n</cert>\n<key>\n`cat {{ openvpn.server.clients_dir }}/{{ item }}/{{ item }}.key`\n</key>" >> {{ openvpn.server.clients_dir }}/{{ item }}/{{ item }}.ovpn
  with_items:
      - "{{ easy_rsa_clients }}"
  become: yes

- name: "starting openvpn server"
  service:
    name: openvpn
    state: started
  become: yes