---
- name: "copying sample files"
  shell: cp -r "{{ easy_rsa.config.sample_folder }}"  "{{ easy_rsa.config.openvpn_folder }}"
  args:
    creates: "{{ easy_rsa.config.openvpn_easy_rsa_folder }}"
  become: yes

- name: "creating the keys directory"
  file:
    path: "{{ easy_rsa.config.openvpn_keys_folder }}"
    state: directory
  become: yes

- name: "generating pem file"
  shell: "openssl dhparam -out {{ easy_rsa.config.openvpn_folder }}/dh2048.pem 2048"
  args:
    creates: "{{ easy_rsa.config.openvpn_folder }}/dh2048.pem"
  become: yes

- name: "initializing the default vars"
  shell: " ./vars "
  args:
    chdir: "{{ easy_rsa.config.openvpn_easy_rsa_folder }}"
  become: yes



#- name: "cleaning the keys directory"
#  shell: ". /clean-all"
#  args:
#    chdir: "{{ easy_rsa.config.openvpn_easy_rsa_folder }}"
#  become: yes

#- name: "building the ca"
#  expect:
#    command: /bin/sh build-ca
#    chdir: "{{ easy_rsa.config.openvpn_easy_rsa_folder }}"
#    responses:
#      Question:
#       - "{{ openvpn.server.cert.vars.country }}"
#        - "{{ openvpn.server.cert.vars.province }}"
#        - "{{ openvpn.server.cert.vars.city }}"
#        - "{{ openvpn.server.cert.vars.organisation }}"
#        - "{{ openvpn.server.cert.vars.organisation_unit }}"
#        - "{{ openvpn.server.cert.vars.organisation }}"
#        - "{{ openvpn.server.cert.vars.server_name }} {{ openvpn.server.cert.vars.country }}"
#        - "{{ openvpn.server.cert.vars.email }}"
#  become: yes